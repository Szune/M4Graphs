using System;

namespace M4Graphs.Core.General
{
    /// <summary>
    /// A class representing a position generated by <see cref="Model"/>.
    /// </summary>
    public class GeneratedPosition : IEquatable<GeneratedPosition>
    {
        /// <summary>
        /// Returns the x-coordinate.
        /// </summary>
        public int X;
        /// <summary>
        /// Returns the y-coordinate.
        /// </summary>
        public int Y;

        /// <summary>
        /// Initializes a new instance.
        /// </summary>
        public GeneratedPosition()
        {

        }

        /// <summary>
        /// Initializes a new instance.
        /// </summary>
        /// <param name="x"></param>
        /// <param name="y"></param>
        public GeneratedPosition(int x, int y)
        {
            X = x;
            Y = y;
        }

        /// <summary>
        /// Determines whether the specified <see cref="GeneratedPosition"/> is equal to the current one.
        /// </summary>
        /// <param name="other"></param>
        /// <returns></returns>
        public bool Equals(GeneratedPosition other)
        {
            if (other == null) return false;
            if (other.X != X) return false;
            if (other.Y != Y) return false;
            return true;
        }

        /// <summary>
        /// Determines whether the specified object is equal to the current object.
        /// </summary>
        /// <param name="obj"></param>
        /// <returns></returns>
        public override bool Equals(object obj)
        {
            if (obj is GeneratedPosition lvl)
                return Equals(lvl);
            return false;
        }

        /// <summary>
        /// Returns the position's hash code.
        /// </summary>
        /// <returns></returns>
        public override int GetHashCode()
        {
            return new { X, Y }.GetHashCode();
        }
    }
}
